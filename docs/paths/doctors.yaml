/doctors:
  get:
    summary: Get all doctors
    tags: [Doctors]
    security:
      - bearerAuth: []
    responses:
      "200":
        description: List of doctors (with user data, password removed)
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/User'
      "500":
        description: Server error

/doctors/{id}:
  get:
    summary: Get doctor by ID
    tags: [Doctors]
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    responses:
      "200":
        description: Doctor details with linked user info
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Doctor'
      "404":
        description: Doctor not found
      "500":
        description: Server error
  put:
    summary: Update a doctor (and optionally linked user)
    tags: [Doctors]
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              doctor:
                type: object
                description: Doctor-specific fields
                properties:
                  specialization:
                    type: string
                    example: Cardiologist
                  contactNumber:
                    type: string
                    example: "+216-55-123-456"
                  addressText:
                    type: string
                    example: "123 Main St, Tunis"
                  addressCoordinates:
                    type: string
                    example: "36.8065,10.1815"
              user:
                type: object
                description: Linked user fields
                properties:
                  name:
                    type: string
                    example: Dr. Ahmed Slim
                  age:
                    type: integer
                    example: 45
                  gender:
                    type: string
                    enum: [male, female, other]
                    example: male
                  avatar:
                    type: string
                    format: uri
                    example: https://example.com/avatar.png
    responses:
      "200":
        description: Updated doctor with user info
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Doctor'
      "404":
        description: Doctor not found
      "500":
        description: Server error
  delete:
    summary: Delete a doctor
    tags: [Doctors]
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    responses:
      "200":
        description: Doctor deleted successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: Doctor deleted successfully
      "404":
        description: Doctor not found
      "500":
        description: Server error
